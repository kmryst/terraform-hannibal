



type Query {
  capitalCities: CapitalCityCollection
  hannibalRoute: HannibalRouteCollection
  pointRoute: PointRouteCollection
  routes: [Route!]!
  route(id: Int!): Route # nullable
}

type Mutation {
  createRoute(name: String!, description: String!, coordinates: [[Float!]!]!, color: String): Route!
  seedRoutes: String!
}

type Route {
  id: ID!
  name: String!
  description: String!
  coordinates: [[Float!]!]!
  color: String
  createdAt: String!
  updatedAt: String!
}

type CapitalCityCollection {
  type: String
  features: [CapitalCityFeature]
}

type CapitalCityFeature {
  type: String
  geometry: GeometryPoint
  properties: CapitalCityProperties
}

type HannibalRouteCollection {
  type: String
  features: [HannibalRouteFeature]
}

type HannibalRouteFeature {
  type: String
  geometry: GeometryLineString
  properties: HannibalRouteProperties
}

type PointRouteCollection {
  type: String
  features: [PointRouteFeature]
}

type PointRouteFeature {
  type: String
  geometry: GeometryPoint
  properties: PointRouteProperties
}

type GeometryPoint {
  type: String
  coordinates: [Float]
}

type GeometryLineString {
  type: String
  coordinates: [[Float]]
}

type CapitalCityProperties {
  name: String
  description: String
  empire: String
}

type HannibalRouteProperties {
  description: String
}

type PointRouteProperties {
  description: String
}
