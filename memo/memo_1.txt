

npm run start:dev

cd .\clinet

npm run dev






npm uninstall reflect-metadata



npm install reflect-metadata@0.1.13





npm install @nestjs/graphql@12.0.9 @nestjs/apollo@12.0.9 graphql@16.8.1 apollo-server-express@3.12.1





npm install @nestjs/config@3.1.1


npm install cors@2.8.5 @types/cors@2.8.14


npm install @types/node@20.6.3 ts-node@10.9.1 typescript@5.2.2 --save-dev

mkdir -p src/geojson_data
mkdir -p src/graphql/schema
mkdir -p src/modules/map
mkdir -p src/modules/route
mkdir -p src/common/interfaces


mkdir -p client/src/apollo/
mkdir -p client/src/components/
mkdir -p client/src/services/
mkdir -p client/src/utils/



Copy-Item -Path "..\graphql-react-hannibal-8\src\apollo\*" -Destination ".\client\src\apollo\" -Recurse
Copy-Item -Path "..\graphql-react-hannibal-8\src\components\*" -Destination ".\client\src\components\" -Recurse
Copy-Item -Path "..\graphql-react-hannibal-8\src\services\*" -Destination ".\client\src\services\" -Recurse
Copy-Item -Path "..\graphql-react-hannibal-8\src\utils\*" -Destination ".\client\src\utils\" -Recurse
Copy-Item -Path "..\graphql-react-hannibal-8\src\App.*" -Destination ".\client\src\"
Copy-Item -Path "..\graphql-react-hannibal-8\src\index.css" -Destination ".\client\src\"
Copy-Item -Path "..\graphql-react-hannibal-8\src\main.tsx" -Destination ".\client\src\"





Copy-Item -Path "..\graphql-react-hannibal-8\src\geojson_data\*.ts" -Destination ".\src\geojson_data\"


npm install @apollo/client


npm install @apollo/client@3.8.7 graphql@16.8.1
npm install react@18.2.0 react-dom@18.2.0
npm install mapbox-gl@2.15.0

cd client
npm init -y
npm install react react-dom @apollo/client graphql mapbox-gl
npm install -D vite @vitejs/plugin-react typescript @types/react @types/react-dom @types/mapbox-gl

npm install ts-morph









$rootPath = "C:\code\javascript\nestjs-hannibal-1"
$folders = @(
    "client\src"
)    

function Show-DirectFiles($path) {
    $items = Get-ChildItem $path -File | Where-Object { $_.Name -ne "backups" -and $_.Name -ne "node_modules" }
    foreach ($item in $items) {
        Write-Host "â”‚   $($item.Name)"
    }
}

foreach ($folder in $folders) {
    $fullPath = Join-Path $rootPath $folder
    Write-Host "`n$folder"
    Show-DirectFiles $fullPath
}