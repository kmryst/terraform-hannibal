"AWSTemplateFormatVersion: '2010-09-09'\nDescription: nestjs-hannibal-3?????EC2/Docker/SSM/ECR?\n\nParameters:\n  InstanceType:\n    Type: String\n    Default: t3.micro\n    Description: t3.micro????????????????????AWS EC2????????????????????????????????????????\n\n  # ???Amazon Linux 2023 AMI?????\n  LatestAmiId:\n    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'\n    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'\n    Description: Amazon Linux 2023???AMI ID\n  \n  KeyName:\n    Type: AWS::EC2::KeyPair::KeyName\n    Description: EC2?????????????????\n\nResources:\n  HannibalEC2Role: # IAM??????????????????\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument: # ?????????????(assume)???\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal: # ??????\n              Service: [ec2.amazonaws.com] # EC2?????????????????????\n            Action: ['sts:AssumeRole'] # sts: AWS Security Token Service ????\n      Path: /\n      ManagedPolicyArns: # ARN: Amazon Resource Name\n        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly  # ECR????????\n        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess # ????????????\n\n  HannibalEC2InstanceProfile:\n    Type: AWS::IAM::InstanceProfile # EC2?????????????????????????????????????????????????\n    Properties:\n      Roles: [!Ref HannibalEC2Role]\n      # !Ref?CloudFormation???????????????????????????????ID???ID?????????????\n\n  HannibalSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Allow HTTP 4000 from anywhere\n      SecurityGroupIngress:\n      # ??????????????????????????????????????????????????????????????????????????????\n        - IpProtocol: tcp\n        # TCP?Web?????HTTP/HTTPS????????????????????????????udp?????????????????????\n          FromPort: 4000 # ????????????\n          ToPort: 4000 # ????????????\n          CidrIp: 0.0.0.0/0\n          # CIDR(????): ?Classless Inter-Domain Routing? IPaddress???????\n        - IpProtocol: tcp\n          FromPort: 22\n          ToPort: 22\n          CidrIp: 0.0.0.0/0   # ????????????????IP?????????\n\n  HannibalEC2Instance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType: !Ref InstanceType # Parameters?????InstanceType\n      ImageId: !Ref LatestAmiId # Amazon Linux 2023???AMI ID?????\n      IamInstanceProfile: !Ref HannibalEC2InstanceProfile\n      SecurityGroupIds: [!Ref HannibalSecurityGroup]\n      KeyName: hannibal-key  # SSH??? wsl?????????\n\n      UserData:\n        Fn::Base64: !Sub |\n          #!/bin/bash\n          set -eux\n\n          dnf update -y\n          dnf install -y docker\n\n          systemctl enable --now docker\n          usermod -aG docker ec2-user\n\n          # ECR????\n          aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 258632448142.dkr.ecr.ap-northeast-1.amazonaws.com\n\n          # Parameter Store????????\n          aws ssm get-parameters-by-path --path \"/nestjs-hannibal-3/\" --region ap-northeast-1 --query \"Parameters[*].[Name,Value]\" --output text | while read name value; do\n            export $(basename $name)=\"$value\"\n            echo \"$(basename $name)=$value\" >> /home/ec2-user/.env\n          done\n\n          chown ec2-user:ec2-user /home/ec2-user/.env\n\n          # docker-compose.yml??\n          cat <<EOF > /home/ec2-user/docker-compose.yml\n          version: \"3\"\n          services:\n            app:\n              image: 258632448142.dkr.ecr.ap-northeast-1.amazonaws.com/nestjs-hannibal-3:latest\n              env_file:\n                - /home/ec2-user/.env\n              ports:\n                - \"4000:4000\"\n              restart: always\n          EOF\n\n          chown ec2-user:ec2-user /home/ec2-user/docker-compose.yml\n\n          # ?????\n          cd /home/ec2-user\n          sudo -u ec2-user docker compose up -d\n\n\n\n\nOutputs:\n  EC2PublicIP:\n    Description: \"EC2 Public IP\"\n    Value: !GetAtt HannibalEC2Instance.PublicIp\n    # GetAtt: Get Attribute\n\n"
